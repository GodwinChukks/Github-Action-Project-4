name: NodeJS CI with Matrix, Linting, and Deployment to S3 and EC2

on: push

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16, 18, 20]
        environment: [development, staging]
        include:
          - node-version: 20
            environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}-v2
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint (Static Code Analysis)
        run: npm run lint

      - name: Run tests with output capture
        run: |
          mkdir -p test-output
          npm test | tee test-output/results-${{ matrix.node-version }}-${{ matrix.environment }}.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-result-${{ matrix.node-version }}-${{ matrix.environment }}
          path: test-output/results-${{ matrix.node-version }}-${{ matrix.environment }}.txt

  deploy-aws:
    needs: build-and-analyze
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Static Files to S3
        run: |
          aws s3 sync ./public s3://${{ secrets.AWS_DEPLOY_BUCKET }} --region ${{ secrets.AWS_REGION }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy Backend to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            git pull origin main
            npm install --omit=dev
            pm2 restart all || node index.js &
